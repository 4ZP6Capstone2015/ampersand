@Rieks: Opgelost.

[Rieks:Issue]: EXPLAIN PATTERN syntax should be included in chapter 2 of fspecs, which currently is not the case.

[Han:]
Yes it is. However, the focus of fspecs is currently only on LaTeX (PDF). Word or other formats are known to be buggy, or do not work at all.

Rieks, als je het hier mee eens bent, mag je dit bestand verwijderen. Anders graag je voorbeeld .adl script.  

[Rieks:] Hierbij het script. De manier waarop ik het heb getest is door de PDF te genereren, en dan te zoeken naar het woord 'disected' dat alleen in de EXPLAINation van het pattern 'Holons' voorkomt. Die is er niet...

<QUOTE>
CONTEXT PolicyMgt -- DATE: ma 30-08-2010   8:55:49,36
-- (file:  2DO.txt ) -- 
---------------------------------------------------------------------
-- (C) 2010, TNO/RJ
-- 2DO: alles moet nog worden gedaan...
---------------------------------------------------------------------
{-===================================================================-}
-- (file:  Holons.pat ) -- 
PATTERN Holons -- WIJZIGER: rieks.joosten@tno.nl
{- This pattern is meant to include notions related to scoping.
-}
-----------------------------------------------------------------------
{- Revision history
RJ/20100803 - distinction between obligation rules and expectation rules.
RJ/20100729 - Created holons pattern (split off from PolicyMgt
-}
-----------------------------------------------------------------------
EXPLAIN PATTERN Holons IN ENGLISH
{+Holons allow discussions to be disected into multiple (trees) of (smaller) discussions, such that in the end all discussions are individually graspable, yet together form a consistent whole. In other words, holons facilitate compliance with Anderson's 'cope-ability criterion', i.e. that humans can only graps some 5.
-}

-- Markup uses `reStructuredTexts <http://docutils.sourceforge.net/docs/user/rst/quickref.html>`__
CONCEPT Holon "a scope ('afbakening' in Dutch) that is committed to comply with a specific set of rules (its obligationrules) and expects itself or other holons to comply with a specific set of rules (its expectationrules)"

-- Onderstaandbedoelde wikipedialink is: `WikiPedia <http://en.wikipedia.org/wiki/Holon_%28philosophy%29>`_
EXPLAIN CONCEPT Holon IN ENGLISH
{+Our use of this term is loosely inspired on  the contents found at <hier moet een link komen naar wikipedia, maar dat doet de latex generator nog niet - zie source file>.

Examples of (our) holons are:

- a military patrol in a UN mission in Uruzgan (e.g. having been assigned the task of trying to find roadbombs);
- a financial department of an enterprise;
- a process whose aim it is to get all bills paid for orders of stocked items;
- a system whose purpose it is to deliver documents upon request;
- a person who wants to live a life in luxury;

All holons have in common that there is a set of rules that they are committed to comply with. These 'obligationrules' (or 'rules-of-engagement'), specific for each holon, define (and constrain) the work that is done within (the scope of) a holon. Thus, a holon should be able to report on the level of compliance to these rules. Also, a holon may want to assess the risk involved by non-compliance. Examples of obligationrules for holons are:

- the military patrol may have a rule 'firing shall not be done on civilians';
- the financial department may have a rule 'income shall exceed expenses by at least 10%';
- the process may have a rule 'unpaid bills sent more than 4 weeks ago shall be handed over to an incasso bureau';
- the system may have a rule 'documents shall only be sent to subscribers';
- the person may have a rule 'I must not do anything that may harm other people'.

All holons also have in common that there is a set of rules that they expect to be complied with, either by other holons, by themselves, or by nature (G.O.D. = a Gathering Of Deities). These 'expectationrules' are the consequence of acknowledging that no holon can do everything all by itself. It is useful for a holon to know its expectations (and from whom this is expeced) so that it can verify whether or not its expectations are being met, and take action if this is not the case.
-}

isParentOf :: Holon * Holon [ASY] PRAGMA "" " is a parent of ".
EXPLAIN RELATION isParentOf IN ENGLISH {+A holon has as many parents as there are hierarchies of which it is  a part. It is characteristic of holons to be part of multiple hierarchies (also called holarchies).-}

RULE holons0 MAINTAINS isParentOf |- -I
EXPLAIN RULE holons0 IN ENGLISH {+Holons cannot be their own parents in the same way that people are not their own children or parents.-}

committedTo :: Holon * Rule PRAGMA "" " is committed to comply with ".
EXPLAIN RELATION committedTo[Holon*Rule] IN ENGLISH {+Holons serve as scopes within which commitment exists to comply with rules.-} 

expectedBy  :: Rule * Holon PRAGMA "Compliance to " " is expected by ".
EXPLAIN RELATION expectedBy[Rule*Holon] IN ENGLISH {+A holon may have expectations, i.e. rules that somehow, outside the scope of control of the holon, are expected to be satisfied.-} 

expectedFrom:: Rule * Holon PRAGMA "Compliance to " " is expected from ".
EXPLAIN RELATION expectedFrom[Rule*Holon] IN ENGLISH {+An expectation of a holon can be assigned to other holons, meaning that these other holons are expected to satisfy the rule representing the expectation.-} 

RULE "rule attachment" MAINTAINS
I[Rule] |- committedTo~;committedTo \/ expectedBy;expectedBy~
EXPLAIN RULE "rule attachment" IN ENGLISH {+Every rule is either committed to or expected by a(t least one) holon.-}

RULE "rules for oneself" MAINTAINS
expectedBy /\ expectedFrom |- committedTo[Holon*Rule]~
EXPLAIN RULE "rules for oneself" IN ENGLISH {+A rule that a holon expects itself to comply with, is implicitly committed to by that holon.-}

RULE "uncommitted expectation" SIGNALS
expectedFrom[Rule*Holon] |- committedTo~
EXPLAIN RULE "uncommitted expectation" IN ENGLISH {+If a holon expects itself or another holon to comply with a rule, that holon should have committed itself to this rule; if not, work needs to be done to fix the situation.-}

-----------------------------------------------------------------------
ENDPATTERN
{-===================================================================-}
-- (file:  Holons.svc ) -- 
-----------------------------------------------------------------------
{- Revision history
RJ/20100803 - first setup.
-}
-----------------------------------------------------------------------

SERVICE "HolonRules": I[Holon]
= [ "Holon"         : I[Holon]
  , "committedTo"   : committedTo[Holon*Rule]
  , "expected"      : expectedBy[Rule*Holon]~
  = [ "expected"    : I[Rule]
    , "expectedFrom": expectedFrom
  ] ]

{-
SERVICE "HolonPolicies": I[Holon]
= [ "Holon"         : I[Holon]
  , "committedTo"   : committedTo[Holon*Policy]
  , "expected"      : expectedBy[Policy*Holon]~
  = [ "expected"    : I[Policy]
    , "expectedFrom": expectedFrom
  ] ]
-}
-----------------------------------------------------------------------
{- examples from other sources, for inspiration

SERVICE "RuleHolons": I[ONE]
= [ "Rol"        : V[ONE*]
  = [ "Naam"     : personAssignedRole~;pName
  ] ]

SERVICE "Dossiers": I[ONE]
= [ "Dossier van" : V[ONE*DossierArtefact];pDossier~
  = [ "Naam"    : pName
    , "Dossier" : pDossier
  ] ]

SERVICE "Dossiers": V[ONE*DossierArtefact];pDossier~
= [ "Dossiers"  : I[Person]
  = [ "Naam"    : pName
    , "Dossier" : pDossier
  ] ]
-}
-----------------------------------------------------------------------
{-===================================================================-}
-- (file:  PolicyMgt.pat ) -- 
PATTERN PolicyMgt -- WIJZIGER: rieks.joosten@tno.nl
EXPLAIN PATTERN PolicyMgt IN ENGLISH REF "RJ"
{+This pattern facilitates rule management by providing the concept 'policy' to designate a coherent set of rules and subsequently providing the same rules and relations for policies as exist for individual rules.
-}
-----------------------------------------------------------------------
{- Revision history
RJ/20100803 - distinction between obligation policy and expectation policy
RJ/20100725 - definition of holon, holon policy and how holon policy comes about
-}
-----------------------------------------------------------------------
-- Markup uses `reStructuredTexts <http://docutils.sourceforge.net/docs/user/rst/quickref.html>`__
CONCEPT Policy "a set of rules that, for one reason or another, can be treated as a whole."
EXPLAIN CONCEPT Policy IN ENGLISH
{+Whatever is said or done for a policy is (implicitly also) said or done for all rules in that policy. An example of this is commitment.-}

contains    :: Policy * Rule  PRAGMA "" " contains ".
EXPLAIN RELATION contains[Policy*Rule] IN ENGLISH {+A policy is a container for rules.-}

committedTo :: Holon * Policy PRAGMA "" " is committed to comply with (all rules contained in) ".
EXPLAIN RELATION committedTo[Holon*Policy] IN ENGLISH {+Holons serve as scopes within which commitment exists to comply with policies (i.e. sets of rules)-}

expectedBy  :: Policy * Holon [UNI] PRAGMA "Compliance to (all rules contained in) " " is expected by ".
EXPLAIN RELATION expectedBy[Policy*Holon] IN ENGLISH {+A holon may have expectations, i.e. rules that somehow, outside the scope of control of the holon, are expected to be satisfied. For its convenience, such rules can be gathered in policy.-}

expectedFrom:: Policy * Holon PRAGMA "Compliance to (all rules contained in) " " is expected from ".
EXPLAIN RELATION expectedFrom[Policy*Holon] IN ENGLISH {+Expectations of a holon, expressed as a policy containting rules representing such expectations, can be assigned to other holons, meaning that these other holons are expected to satisfy all rules in that policy.-}

RULE policycommitment MAINTAINS
committedTo; contains = committedTo
EXPLAIN RULE policycommitment IN ENGLISH {+Commitment to a policy (by a holon) implies commitment to every rule contained therein. Conversely, all rules committed to (by a holon) must be part of a policy (that is committed to by this holon)-}

RULE policyexpectations1 MAINTAINS
expectedBy |- -contains!expectedBy
EXPLAIN RULE policyexpectations1 IN ENGLISH {+A policy that a holon expects to be complied with shall only contain rules that the holon expects to be complied with.-}

RULE policyexpectations2 MAINTAINS
expectedFrom |- -contains!expectedFrom
EXPLAIN RULE policyexpectations2 IN ENGLISH {+A policy that a holon expects from a(nother) holon shall only contain rules that the holon expects from that holon.-}

RULE policy1 MAINTAINS
I[Policy] |- committedTo~;committedTo \/ expectedBy;expectedBy~
EXPLAIN RULE policy1 IN ENGLISH {+Every policy is either committed to or expected by a(t least one) holon.-}

RULE policy2 MAINTAINS
expectedBy /\ expectedFrom |- committedTo[Holon*Policy]~
EXPLAIN RULE policy2 IN ENGLISH {+A policy that a holon expects itself to comply with, is implicitly committed to by that holon.-}

SIGNAL spolicy1 ON
expectedFrom[Policy*Holon] |- committedTo~
EXPLAIN RULE spolicy1 IN ENGLISH {+If a holon expects itself or another holon to comply with a policy, that holon should have committed itself to this policy; if not, work needs to be done to fix the situation.-}

-----------------------------------------------------------------------
{- Subpolicies may come in handy as well.... -} 

subPolicyOf :: Policy * Policy [ASY] PRAGMA "All rules contained in " " are also contained in ".
EXPLAIN RELATION subPolicyOf IN ENGLISH {+Policies may contain other policies, which may contain still other policies, and so on. Since every policy is a set of rules, this implies that all rules contained in a policy that is contained in another policy, are also contained in that other policy."-}

RULE policycontainment MAINTAINS subPolicyOf~; contains |- contains
EXPLAIN RULE policycontainment IN ENGLISH {+All rules that are contained in a policy that is part of another policy, are also contained in that other policy.-}

RULE policycommitment MAINTAINS committedTo; subPolicyOf~ |- committedTo
EXPLAIN RULE policycommitment IN ENGLISH {+Commitment to a policy implies commitment to every subpolicy contained therein.-}

RULE policyexpectations1 MAINTAINS subPolicyOf; expectedBy |- expectedBy
EXPLAIN RULE policyexpectations1 IN ENGLISH {+Expectance of a policy implies expectance of every subpolicy contained therein.-}

RULE policyexpectations2 MAINTAINS subPolicyOf; expectedFrom |- expectedFrom
EXPLAIN RULE policyexpectations2 IN ENGLISH {+Expectance of a policy implies expectance of every subpolicy contained therein.-}

-----------------------------------------------------------------------
EXPLAIN CONCEPT Holon IN ENGLISH REF "PolicyMgt.pat"
{+A characteristic property for a holon is that it is part of (often multiple) hierarchies, which has as consequence that the holon must comply with the 'rules of engagement' of every holon that is 'its parent' in a hierarchy that it is part of. 

For example, a military patrol is in the organizational hierarchy of the army of which it is part. Also, it is part of the organizational hierarchy of the (Uruzgan) mission, which consists of (parts of) other armies. For insiders: the patrol is also part of the information hierarchy with levels 'dv', 'confi', 'secret' and 'top secret'. The military patrol must hence comply with the 'rules of engagement' for the Dutch army, the rules of engagement of the Uruzgan mission as specified by the UN, the Dutch laws, etc.

The aforementioned process is part of a multiple process hierarchies (e.g. the ordering process hierarchy and the billing process hierarchy), but it can also be part of an organizational hierarchy (as it differs whether the process is done in company A or company B), meaning that it has to comply with all rules for 'ordering', all rules for 'billing' and all rules-of-conduct for the company in which it is run. 

Thus, for every such hierarchy that a holon is part of, it has a parent holon, whose obligationspolicy needs to be complied with. To do so, the parent holon creates an ExpectedPolicy for every of its child(ren) and the children MUST commit to this policy.
-}
-----------------------------------------------------------------------
ENDPATTERN
{-===================================================================-}
ENDCONTEXT
</QUOTE>