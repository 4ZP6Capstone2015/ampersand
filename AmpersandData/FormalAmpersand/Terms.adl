CONTEXT AST IN ENGLISH LATEX
-- The comments for this script can be found in Atoms.doc
INCLUDE "Atoms.adl"

PROCESS "Declaring Relations"
RELATION id[Term*Concept] [UNI,INJ]          -- SUR is maintained in RULE "id is surjective"
RELATION src[Signature*Concept] [UNI]        -- TOT is maintained in RULE signatureSrc
RELATION tgt[Signature*Concept] [UNI]        -- TOT is maintained in RULE signatureTgt
RELATION signature[Relation*Signature] [UNI] -- TOT is maintained in RULE totSign

ROLE ExecEngine MAINTAINS totSign
RULE totSign : I[Relation] |- signature;signature~
VIOLATION (TXT "{EX} NewStruct_;Signature" -- maak een nieuw atoom in concept Signature
                ,TXT "_;signature_;Relation_;", SRC I, TXT "_;Signature_;_NEW"
          )
ROLE ExecEngine MAINTAINS signatureSrcIns
RULE signatureSrcIns : signature~;source |- src
VIOLATION (TXT "{EX} InsPair_;src_;Signature_;", SRC I, TXT "_;Concept_;", TGT I)
ROLE ExecEngine MAINTAINS signatureSrcDel
RULE signatureSrcDel : src |- signature~;source
VIOLATION (TXT "{EX} DelPair_;src_;Signature_;", SRC I, TXT "_;Concept_;", TGT I)

ROLE ExecEngine MAINTAINS signatureTgtIns
RULE signatureTgtIns : signature~;target |- tgt
VIOLATION (TXT "{EX} InsPair_;tgt_;Signature_;", SRC I, TXT "_;Concept_;", TGT I)
ROLE ExecEngine MAINTAINS signatureTgtDel
RULE signatureTgtDel : tgt |- signature~;target
VIOLATION (TXT "{EX} DelPair_;tgt_;Signature_;", SRC I, TXT "_;Concept_;", TGT I)

ROLE ExecEngine MAINTAINS "id is surjective"
RULE "id is surjective" : I[Concept] |- id~;id
VIOLATION (TXT "{EX} InsPair_;id_;Term_;", SRC I, TXT "_;Concept_;id(", SRC I, TXT ")")
ENDPROCESS

PROCESS "Defining type-terms"
RELATION repr[Term*Representation] [UNI, TOT, INJ]
ROLE ExecEngine MAINTAINS "Every term has a representation"
--The relation repr, i.e. the representation of terms, is supplied by a spreadsheet or by the meatgrinder. Make sure it is injective.

RELATION dom[Term*TypeTerm] [UNI,INJ]    -- TOT is maintained in RULE "dom is total"
ROLE ExecEngine MAINTAINS "dom is total"
RULE "dom is total" : I |- dom;dom~
VIOLATION (TXT "{EX} InsPair_;dom_;Term_;", SRC I, TXT "_;TypeTerm_;dom(", SRC I, TXT ")")

RELATION cod[Term*TypeTerm] [UNI,INJ]    -- TOT is maintained in RULE "cod is total"
ROLE ExecEngine MAINTAINS "cod is total"
RULE "cod is total" : I |- cod;cod~
VIOLATION (TXT "{EX} InsPair_;cod_;Term_;", SRC I, TXT "_;TypeTerm_;cod(", SRC I, TXT ")")

RELATION popset[Concept*TypeTerm] [UNI] -- TOT is maintained in RULE "popset is total"
ROLE ExecEngine MAINTAINS "popset is total"
RULE "popset is total" : I[Concept] |- popset;popset~
VIOLATION (TXT "{EX} InsPair_;popset_;Concept_;", SRC I, TXT "_;TypeTerm_;pop(", SRC name, TXT ")")
ENDPROCESS

PROCESS "Defining type-terms"
RELATION pretype[TypeTerm*Concept]
RELATION sub[TypeTerm*TypeTerm]
RELATION typehalf[Term*Signature]

ROLE ExecEngine MAINTAINS "Insert into pretype"
RULE "Insert into pretype" : subs;popset~ |- pretype
VIOLATION (TXT "{EX} InsPair_;pretype_;TypeTerm_;", SRC I, TXT "_;Concept_;", TGT I)

{-
ROLE ExecEngine MAINTAINS "dom pretype id"
RULE "dom pretype id" : id;dom |- pretype~
VIOLATION (TXT "{EX} InsPair_;pretype_;TypeTerm_;", TGT I, TXT "_;Concept_;", SRC I)

ROLE ExecEngine MAINTAINS "cod pretype id"
RULE "cod pretype id" : id;cod |- pretype~
VIOLATION (TXT "{EX} InsPair_;pretype_;TypeTerm_;", TGT I, TXT "_;Concept_;", SRC I)

ROLE ExecEngine MAINTAINS "dom pretype vee"
RULE "dom pretype vee" : src~;vee;dom |- pretype~
VIOLATION (TXT "{EX} InsPair_;pretype_;TypeTerm_;", TGT I, TXT "_;Concept_;", SRC I)

ROLE ExecEngine MAINTAINS "cod pretype vee"
RULE "cod pretype vee" : tgt~;vee;cod |- pretype~
VIOLATION (TXT "{EX} InsPair_;pretype_;TypeTerm_;", TGT I, TXT "_;Concept_;", SRC I)
-}

RELATION sub[TypeTerm*TypeTerm]
MEANING "s sub g  means that each element of type-term  s  is defined to be an element of type-term  g  as well."
RELATION subs[TypeTerm*TypeTerm]
MEANING "s subs g  means that each element of type-term  s  is defined or inferred to be an element of type-term  g."
ROLE ExecEngine MAINTAINS subsIns
RULE subsIns : sub;subs\/subs;sub\/I |- subs
VIOLATION (TXT "{EX} InsPair_;subs_;TypeTerm_;", SRC I, TXT "_;TypeTerm_;", TGT I)
ROLE ExecEngine MAINTAINS subsDel
RULE subsDel : subs |- sub;subs\/subs;sub\/I
VIOLATION (TXT "{EX} DelPair_;subs_;TypeTerm_;", SRC I, TXT "_;TypeTerm_;", TGT I)

ROLE ExecEngine MAINTAINS "INS isa INTO sub"
RULE "INS isa INTO sub" : popset~;isa;popset |- sub
VIOLATION (TXT "{EX} InsPair_;sub_;TypeTerm_;", SRC I, TXT "_;TypeTerm_;", TGT I)

ROLE User MAINTAINS "Unambiguous pretype"
RULE "Unambiguous pretype" : pretype~;pretype |- I[Concept] - isaStar;isaStar~
MEANING "For every type-term, there is at most one concept that is the pretype of that type-term."
ROLE User MAINTAINS "Complete pretype"
RULE "Complete pretype" : I[TypeTerm] |- pretype;pretype~
MEANING "Every type-term must have a concept as its pretype."
ENDPROCESS

{-
RELATION partOf[Concept*Typology] [UNI,TOT]
MEANING "Every concept is part of exactly one typology"

RULE "typologies" : isa;partOf |- partOf
MEANING "A specialisation of a concept and the concept itself are both part of the same typology."

RULE "Integrity of Atoms and populations": partOf~;pop~;pop;partOf |- I
MEANING "Atoms can be in the population of different Concepts only if such Concepts belong to the same Typology"
-}


PROCESS Signatures
RELATION src[Signature*Concept] [UNI]
RELATION tgt[Signature*Concept] [UNI]
RELATION signature[Relation*Signature]
RELATION isaStar[Signature]
ROLE ExecEngine MAINTAINS signatureIsasIns, signatureIsasDel
RULE signatureIsasIns : src;isaStar;src~ /\ tgt;isaStar;tgt~ |- isaStar[Signature]
VIOLATION (TXT "{EX} InsPair;isaStar[Signature];Signature;", SRC I, TXT ";Signature;", TGT I)
RULE signatureIsasDel : isaStar[Signature] |- src;isaStar;src~ /\ tgt;isaStar;tgt~
VIOLATION (TXT "{EX} DelPair;isaStar[Signature];Signature;", SRC I, TXT ";Signature;", TGT I)
ENDPROCESS

ENDCONTEXT