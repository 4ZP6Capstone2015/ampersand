CONTEXT AST IN ENGLISH LATEX

PROCESS Atoms
RELATION repr[Atom*TType] [UNI,TOT]
MEANING "Every atom has a representation, which identifies that atom."

RELATION pop[Atom*Concept] [TOT] 
MEANING "If $a\\ \\id{pop}\\ c$, we say that atom $a$ is in the population of concept $c$."

RELATION eq[Atom*Atom] [UNI,TOT,SUR,INJ,SYM,TRN,RFX]
MEANING "Equality is defined on atoms."

RELATION name[Concept*String] [UNI,TOT,INJ]
MEANING "Every concept has a name, which identifies that concept."

RELATION sub[Concept*Concept]
MEANING "$s\\ \\id{sub}\\ g$ means that each element of concept $s$ is an element of concept $g$ as well."

RULE "equality on Atoms" : eq = repr;repr~
MEANING "Two atoms are equal if their representations are equal and they share the same concept."

RULE "specialization" : pop;sub |- pop
MEANING "An atom that is an instance of a specialization of $c$ is an instance of $c$ as well."
--VIOLATION (TXT "{EX} InsPair;pop;Atom;", SRC I, TXT ";Concept;", TGT I)
ROLE ExecEngine MAINTAINS specialization

RELATION source[Relation*Concept] [UNI,TOT] 
RELATION target[Relation*Concept] [UNI,TOT] 

RELATION in[Pair*Relation] [UNI,TOT]
RELATION l[Pair*Atom] [UNI,TOT]
RELATION r[Pair*Atom] [UNI,TOT]

RULE "source type" : l~;in;source |- pop
MEANING "Every atom at the left of a pair is in the population of the source concept of that relation."
RULE "target type" : r~;in;target |- pop
MEANING "Every atom at the right of a pair is in the population of the target concept of that relation."
--VIOLATION (TXT "{EX} InsPair;pop;Atom;", SRC I, TXT ";Concept;", TGT I)

--RULE "garbage" : pop |- l~;in;source \/ r~;in;target
--VIOLATION (TXT "{EX} DelPair;pop;Atom;", SRC I, TXT ";Concept;", TGT I)
ROLE ExecEngine MAINTAINS "source type", "target type"
ENDPROCESS

INTERFACE Atoms : '_SESSION'
TABS[ atoms : V[SESSION*Atom]
      COLS [ repr : repr
           , pop  : pop
           ]
    , concepts :V[SESSION*Concept]
      COLS [ name             : I
           , generalizations  : sub
           , specializations  : sub~
           ]
    ]

VIEW Atom : Atom(repr,TXT ":",pop)

INTERFACE Atom(repr,pop) : I[Atom]
COLS [ repr : repr
     , pop  : pop
     ]

VIEW Concept : Concept(name)

INTERFACE newConcept(name) : I[Concept]
COLS [ name             : name
     ]

INTERFACE mkISA(sub) : I[Concept]
COLS [ name             : name
     , generalizations  : sub
     , specializations  : sub~
     ]
ENDCONTEXT