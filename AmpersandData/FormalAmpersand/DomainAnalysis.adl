CONTEXT AST IN ENGLISH LATEX
-- The comments for this script can be found in DomainAnalysis.docadl

PROCESS "Binary Terms"
    CONCEPT Operator ""
    CONCEPT BinaryTerm ""
    CLASSIFY BinaryTerm ISA Term
    RELATION lhs[BinaryTerm*Term] [UNI]
    RELATION rhs[BinaryTerm*Term] [UNI]
    RELATION operator[BinaryTerm*Operator] [UNI,TOT]
ENDPROCESS

RELATION lhs[Rule*Term] [UNI]
RELATION rhs[Rule*Term] [UNI]
REPRESENT Representation TYPE ALPHANUMERIC
REPRESENT Identifier TYPE ALPHANUMERIC

CONCEPT Rule ""

PROCESS "Compositions"
    CLASSIFY Composition ISA BinaryTerm

    ROLE ExecEngine MAINTAINS domainDomComposition
    RULE domainDomComposition : dom~;I[Composition];lhs[BinaryTerm*Term];dom |- sub
    VIOLATION (TXT "{EX} InsPair_;sub_;TypeTerm_;", SRC I, TXT "_;TypeTerm_;", TGT I)

    ROLE ExecEngine MAINTAINS domainCodComposition
    RULE domainCodComposition : cod~;I[Composition];rhs[BinaryTerm*Term];cod |- sub
    VIOLATION (TXT "{EX} InsPair_;sub_;TypeTerm_;", SRC I, TXT "_;TypeTerm_;", TGT I)
ENDPROCESS

PROCESS "Intersections"
    CLASSIFY Intersection ISA BinaryTerm

    ROLE ExecEngine MAINTAINS domainDomIntersection
    RULE domainDomIntersection : dom~;I[Intersection];lhs[BinaryTerm*Term];dom |- sub
    VIOLATION (TXT "{EX} InsPair_;sub_;TypeTerm_;", SRC I, TXT "_;TypeTerm_;", TGT I)

    ROLE ExecEngine MAINTAINS domainCodIntersection
    RULE domainCodIntersection : cod~;I[Intersection];rhs[BinaryTerm*Term];cod |- sub
    VIOLATION (TXT "{EX} InsPair_;sub_;TypeTerm_;", SRC I, TXT "_;TypeTerm_;", TGT I)
ENDPROCESS

PROCESS "Relations"
    RELATION repr[Term*Representation] [UNI, TOT, INJ]
    --The relation repr, i.e. the representation of terms, is supplied by a spreadsheet or by the meatgrinder. Make sure it is injective.
    CLASSIFY Relation ISA Term

    RELATION popset[Concept*TypeTerm] [UNI] -- TOT is computed by the exec-engine

    ROLE ExecEngine MAINTAINS insDomRelation
    RULE insDomRelation : dom~;source;popset |- sub
    VIOLATION (TXT "{EX} InsPair_;sub_;TypeTerm_;", SRC I, TXT "_;TypeTerm_;", TGT I)

    ROLE ExecEngine MAINTAINS insCodRelation
    RULE insCodRelation : cod~;target;popset |- sub
    VIOLATION (TXT "{EX} InsPair_;sub_;TypeTerm_;", SRC I, TXT "_;TypeTerm_;", TGT I)
ENDPROCESS

PROCESS "Binding Terms to Relations"
    RELATION bind[Term*Relation] [UNI]

    ROLE ExecEngine MAINTAINS insDomBind, insDomBindFlip
    RULE insDomBind : dom~;bind;dom |- sub
    VIOLATION (TXT "{EX} InsPair_;sub_;TypeTerm_;", SRC I, TXT "_;TypeTerm_;", TGT I)
    RULE insDomBindFlip : dom~;bind;dom |- sub~
    VIOLATION (TXT "{EX} InsPair_;sub_;TypeTerm_;", TGT I, TXT "_;TypeTerm_;", SRC I)

    ROLE ExecEngine MAINTAINS insCodBind, insCodBindFlip
    RULE insCodBind : cod~;bind;cod |- sub
    VIOLATION (TXT "{EX} InsPair_;sub_;TypeTerm_;", SRC I, TXT "_;TypeTerm_;", TGT I)
    RULE insCodBindFlip : cod~;bind;cod |- sub~
    VIOLATION (TXT "{EX} InsPair_;sub_;TypeTerm_;", TGT I, TXT "_;TypeTerm_;", SRC I)
ENDPROCESS

ENDCONTEXT